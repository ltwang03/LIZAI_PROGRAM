version: '3.8'
services:
  rabbitmq:
    hostname: rabbitmq
    container_name: rabbitmq
    image: rabbitmq:3.9.7-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
    volumes:
      - ./volume/rabbitmq/data:/var/lib/rabbitmq
      - ./volume/rabbitmq/logs:/var/log/rabbitmq
  database:
    container_name: database
    image: mysql:8.4.0
    hostname: database
    ports:
      - '3306:3306'
    env_file:
      - .env
    restart: always
    volumes:
      - ./volume/mysql/data:/var/lib/mysql
      - ./volume/mysql/logs:/var/log/mysql
  service_1:
    image: lethanhquang147/base-image-exercies-6:5.0.0
    container_name: service_1
    working_dir: /usr/src/app
    env_file:
      - .env.prod
    volumes:
      - ./shared:/usr/src/app/shared
      - ./:/usr/src/app
    command: npm run start:service1
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    depends_on:
      - rabbitmq
      - database
  service_2:
    image: lethanhquang147/base-image-exercies-6:5.0.0
    container_name: service_2
    working_dir: /usr/src/app
    env_file:
      - .env.prod
    volumes:
      - ./shared:/usr/src/app/shared
      - ./:/usr/src/app
    command: npm run start:service2
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - rabbitmq
      - database
  service_3:
    image: lethanhquang147/base-image-exercies-6:5.0.0
    container_name: service_3
    working_dir: /usr/src/app
    env_file:
      - .env.prod
    volumes:
      - ./shared:/usr/src/app/shared
      - ./:/usr/src/app
    command: npm run start:service3
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - rabbitmq
      - database
  api:
    image: lethanhquang147/base-image-exercies-6:5.0.0
    container_name: api
    working_dir: /usr/src/app
    env_file:
      - .env.prod
    volumes:
      - ./shared:/usr/src/app/shared
      - ./:/usr/src/app
    command: npm run start:api
    ports:
      - "3000:3000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - rabbitmq
      - database
